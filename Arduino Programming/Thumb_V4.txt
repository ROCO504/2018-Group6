#include <Servo.h>            //Library to use servos

int ForwardButtonPin = 12;
int LeftButtonPin = 4;
int RightButtonPin = 13;
int BackwardsButtonPin = 7;

int LoosenButtonPin = 3;
int TightenButtonPin = 8;

int FoldTipButtonPin = 2;
int UnFoldTipButtonPin = 9;

int Direction1Pin = 10;        //Pin for forwards/back motor
int Direction2Pin = 11;        //Pin for left/right motor 

int TLPin = 5;                //Pin for tightening/loosening 
int FTPin = 6;                //Pin for Folding Tip

int DegreeChange = 1;

bool ScrewTightFlag = 0;      //Flag to know whether the screw is at its tightest
bool ScrewLooseFlag = 0;      //Flag to know whether the screw is at the loosest we will allow

Servo Direction1Servo;        //Object of servo library for forwards/back
Servo Direction2Servo;        //Object of servo library for left/right
Servo TLServo;
Servo FTServo; 

int CenteringServoAngle = 90;  //Angle that when used centres the servo 

int D1ServoAngle;         //Servo 1 position in degrees
int D2ServoAngle;         //Servo 2 position in degrees
int TLServoAngle;         //Servo that tightens/loosens screw
int FTServoAngle;         //Servo for folding tip

int D1ServoUpperLimit = 160;
int D1ServoLowerLimit = 20;
int D2ServoUpperLimit = 160;
int D2ServoLowerLimit = 20;

int ScrewTightUpperLimit = 160;
int ScrewTightLowerLimit = ScrewTightUpperLimit - 10;
int ScrewLooseLowerLimit = 20;
int ScrewLooseUpperLimit = ScrewLooseLowerLimit + 10;

int TipUpperLimit = 140;
int TipLowerLimit = 40;

//-----------------------------------------------------------------------------//
//---------------------------------SET UP--------------------------------------//
//-----------------------------------------------------------------------------//


void setup() {
  Serial.begin(9600);         //Open Serial port, set data rate 9600bps
  pinMode(ForwardButtonPin, INPUT);
  pinMode(LeftButtonPin, INPUT);
  pinMode(RightButtonPin, INPUT);
  pinMode(BackwardsButtonPin, INPUT);  

  pinMode(LoosenButtonPin, INPUT);
  pinMode(TightenButtonPin, INPUT);

  pinMode(FoldTipButtonPin, INPUT);
  pinMode(UnFoldTipButtonPin, INPUT);
  
  Direction1Servo.attach(Direction1Pin);    //Attach servo object to digital pin 
  Direction2Servo.attach(Direction2Pin);  
  TLServo.attach(TLPin);
  FTServo.attach(FTPin);

  D1ServoAngle = CenteringServoAngle;
  D2ServoAngle = CenteringServoAngle;
  TLServoAngle = CenteringServoAngle;
  FTServoAngle = CenteringServoAngle;

  Direction1Servo.write(D1ServoAngle); //Centre servo 1
  Direction2Servo.write(D2ServoAngle); //Centre servo 2
  TLServo.write(TLServoAngle);
  FTServo.write(FTServoAngle);
  delay(1000);
}


//-----------------------------------------------------------------------------//
//--------------------------------FUNCTIONS------------------------------------//
//-----------------------------------------------------------------------------//
//---Move Thumb Forwards---//
void MoveForward(){
  if (ScrewTightFlag == 0) {
    D1ServoAngle = D1ServoAngle + DegreeChange;  //Increment D1 Angle
    if (D1ServoAngle > D1ServoUpperLimit){    //Check not outside range
      D1ServoAngle = D1ServoUpperLimit;       //If is set to max limit
    }
    Serial.print("Servo 1: ");
    Serial.println(D1ServoAngle);
    Direction1Servo.write(D1ServoAngle);      //Write that angle
    delay(15);                                //Wait 15ms for the servo to reach position
  }
}

//---Move Thumb Backwards---//
void MoveBackwards(){
  if (ScrewTightFlag == 0){
    D1ServoAngle = D1ServoAngle - DegreeChange;  //Decrement D1 Angle
    if (D1ServoAngle < D1ServoLowerLimit){    //Check not outside range
      D1ServoAngle = D1ServoLowerLimit;       //If is set to min limit
    }
    Serial.print("Servo 1: ");
    Serial.println(D1ServoAngle);
    Direction1Servo.write(D1ServoAngle);
    delay(15);
}
}

//---Move Thumb Right---//
void MoveRight(){
  if (ScrewTightFlag == 0){
    D2ServoAngle = D2ServoAngle + DegreeChange;  //Increment D2 Angle
    if (D2ServoAngle > D2ServoUpperLimit){    //Check not outside range
      D2ServoAngle = D2ServoUpperLimit;       //If is set to max limit
    }
    Serial.print("Servo 2: ");
    Serial.println(D2ServoAngle);
    Direction2Servo.write(D2ServoAngle);
    delay(15);
}
}

//---Move Thumb Left---//
void MoveLeft(){
  if (ScrewTightFlag == 0){
    D2ServoAngle = D2ServoAngle - DegreeChange; //Decrement D2 Angle
    if (D2ServoAngle < D2ServoLowerLimit){    //Check not outside range
      D2ServoAngle = D2ServoLowerLimit;       //If is set to min limit
    }
    Serial.print("Servo 2: ");
    Serial.println(D2ServoAngle);
    Direction2Servo.write(D2ServoAngle);
    delay(15);
  }
}


//---Tighten Screw---//
void TightenScrew() {
  TLServoAngle = TLServoAngle + DegreeChange;  
  if (TLServoAngle > ScrewTightUpperLimit){
    TLServoAngle = ScrewTightUpperLimit;
  }

  if (TLServoAngle > ScrewTightLowerLimit){
    ScrewTightFlag = 1;
  }

  if (TLServoAngle > ScrewLooseUpperLimit){
    ScrewLooseFlag = 0;
  }
  
  Serial.print("Screw Servo: ");
  Serial.println(TLServoAngle);
  TLServo.write(TLServoAngle);
  delay(15);
}

//---Loosen Screw---//
void LoosenScrew(){
 TLServoAngle = TLServoAngle - DegreeChange;
 if (TLServoAngle > ScrewTightLowerLimit){
    TLServoAngle = ScrewTightLowerLimit;
 }

 if (TLServoAngle < ScrewTightLowerLimit){
    ScrewTightFlag = 0;
 }

 if (TLServoAngle < ScrewLooseUpperLimit){
  ScrewLooseFlag = 1;
 }
 Serial.print("Screw Servo: ");
 Serial.println(TLServoAngle);
 TLServo.write(TLServoAngle);
 delay(15);
}


//---Fold Tip---//
void FoldTip(){
  FTServoAngle = FTServoAngle - DegreeChange;
  if (FTServoAngle < TipLowerLimit){
    FTServoAngle = TipLowerLimit;
  }
  Serial.print("Tip Servo: ");
  Serial.println(FTServoAngle);
  FTServo.write(FTServoAngle);
  delay(15);
}
//---Unfold Tip---//
void UnfoldTip(){
  FTServoAngle = FTServoAngle + DegreeChange;
  if (FTServoAngle > TipUpperLimit){
    FTServoAngle = TipUpperLimit;
  }
  Serial.print("Tip Servo: ");
  Serial.println(FTServoAngle);
  FTServo.write(FTServoAngle);
  delay(15);
}




//-----------------------------------------------------------------------------//
//-----------------------------------MAIN--------------------------------------//
//-----------------------------------------------------------------------------//

void loop() {
  
if (digitalRead(ForwardButtonPin) == HIGH){
  MoveForward();
}

if (digitalRead(LeftButtonPin) == HIGH){
  MoveLeft();
}

if (digitalRead(RightButtonPin) == HIGH) {
  MoveRight();
}

if (digitalRead(BackwardsButtonPin) == HIGH) {
  MoveBackwards();
}

if (digitalRead(LoosenButtonPin) == HIGH) {
  LoosenScrew();
}

if(digitalRead(TightenButtonPin) == HIGH) {
  TightenScrew();
}

if(digitalRead(FoldTipButtonPin) == HIGH){
  FoldTip();
}

if(digitalRead(UnFoldTipButtonPin) == HIGH) {
  UnfoldTip();
}

}